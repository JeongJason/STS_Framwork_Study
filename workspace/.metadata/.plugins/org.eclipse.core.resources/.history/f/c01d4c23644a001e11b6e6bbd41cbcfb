package com.example.board.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.board.domain.vo.ReplyVO;
import com.example.board.service.ReplyService;

import lombok.RequiredArgsConstructor;
import lombok.extern.log4j.Log4j;

@RestController
@RequiredArgsConstructor
@RequestMapping("/replies/*")
@Log4j
public class ReplyController {

	private final ReplyService replyService;

//	댓글 등록
	@PostMapping(value="/new",consumes = "application/json", produces = {MediaType.TEXT_PLAIN_VALUE})
	public ResponseEntity<String> create(@RequestBody ReplyVO replyVO) {
		log.info("create............:" + replyVO);
		return replyService.register(replyVO)?new ResponseEntity<>("success",HttpStatus.OK):
			new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
//	게시글 댓글 전체 조회
	@GetMapping(value="/{bno}/{page}",produces= {MediaType.APPLICATION_XML_VALUE,MediaType.APPLICATION_JSON_UTF8_VALUE})
	public ResponseEntity<List<ReplyVO>> getList(@PathVariable("bno") Long bno, @PathVariable int page) {
		log.info("getList......: " + bno);
		return new ResponseEntity<>(replyService.findAllByBNO(bno),HttpStatus.OK);
	}
	
//	게시글 댓글 한건 조회
//	@GetMapping(value="/{rno}",produces= {MediaType.APPLICATION_JSON_UTF8_VALUE})
//	public ReplyVO getReply(@PathVariable("rno") Long rno) {
//		log.info("getReply.....: " + rno);
//		return replyService.findByRNO(rno);
//	}
	@GetMapping(value="/{rno}",produces= {MediaType.APPLICATION_JSON_UTF8_VALUE})
	public ResponseEntity<String> getReply(@PathVariable("rno") Long rno) {
		log.info("getReply.....: " + rno);
		return new ResponseEntity<>(replyService.findByRNO(rno), HttpStatus.OK);
	}
}
